@inherits LayoutComponentBase
@inject ProtectedLocalStorage LocalStorage

<MudThemeProvider Theme="@(myTheme)" IsDarkMode="isDarkMode" />
<MudDialogProvider/>
<MudSnackbarProvider/>
<MudPopoverProvider />

<MudLayout>
    <MudContainer MaxWidth="MaxWidth.Large" Class="pt-6">
        <MudStack Row="true">
            <MudText Typo="Typo.h4">EasyWire</MudText>
            <MudSpacer/>
            <MudToggleIconButton
                Icon="@Icons.Material.Filled.LightMode"
                ToggledIcon="@Icons.Material.Filled.DarkMode"
                Toggled="@isDarkMode"
                ToggledChanged="ToggleDarkMode"
                Color="Color.Inherit"
                Edge="Edge.End"/>
        </MudStack>
    </MudContainer>
    <MudMainContent>
        <MudContainer MaxWidth="MaxWidth.Large">
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>

@code {
    private bool isDarkMode = false;
    
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            var storedDarkMode = await LocalStorage.GetAsync<bool>("DarkMode");
            isDarkMode = storedDarkMode.Value;
            StateHasChanged();
        }
    }
    
    private async Task ToggleDarkMode()
    {
        isDarkMode = !isDarkMode;
        await LocalStorage.SetAsync("DarkMode", isDarkMode);
    }
    
    private MudTheme myTheme = new()
    {
        PaletteLight = new PaletteLight()
        {
            Primary = "#e53935",
            Secondary = "#616161"
        },
        PaletteDark = new PaletteDark()
        {
            Primary = "#e53935",
            Secondary = "#616161"
        },
        LayoutProperties = new LayoutProperties()
        {
            DefaultBorderRadius = "6px"
        }
    };
}
@inherits LayoutComponentBase
@inject ProtectedLocalStorage LocalStorage

<MudThemeProvider Theme="@(myTheme)" IsDarkMode="isDarkMode" />
<MudDialogProvider/>
<MudSnackbarProvider/>
<MudPopoverProvider />

<MudLayout>
    <MudAppBar>
        <MudSpacer/>
        <MudText Typo="Typo.h4">EasyWire</MudText>
        <MudSpacer/>
        <MudToggleIconButton
            Icon="@Icons.Material.Filled.LightMode"
            ToggledIcon="@Icons.Material.Filled.DarkMode"
            Toggled="@isDarkMode"
            ToggledChanged="ToggleDarkMode"
            Color="Color.Inherit"
            Edge="Edge.End"/>
    </MudAppBar>
    <MudMainContent>
        @Body
    </MudMainContent>
</MudLayout>

@code {
    private MudTheme? currentTheme;
    private bool isDarkMode = false;
    
    // Load dark mode settings from local storage and set them
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            var storedDarkMode = await LocalStorage.GetAsync<bool>("DarkMode");
            isDarkMode = storedDarkMode.Value;
            StateHasChanged();
        }
    }
    
    private async Task ToggleDarkMode()
    {
        isDarkMode = !isDarkMode;
        await LocalStorage.SetAsync("DarkMode", isDarkMode);
    }
    
    
    private MudTheme myTheme = new()
    {
        PaletteLight = new PaletteLight()
        {
            Primary = "#e53935",
            Secondary = "#616161"
        },
        PaletteDark = new PaletteDark()
        {
            Primary = "#e53935",
            Secondary = "#616161"
        },
        LayoutProperties = new LayoutProperties()
        {
            DefaultBorderRadius = "6px"
        }
    };
    
}